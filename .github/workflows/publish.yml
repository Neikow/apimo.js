name: Build, Test & Publish to NPM

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linting
        run: yarn lint

      - name: Run tests
        run: yarn test

      - name: Run test coverage
        run: yarn test-coverage

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest

    environment: Deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: yarn
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package
        run: yarn build

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          echo "Build successful. Contents:"
          ls -la dist/
          echo "Checking for TypeScript definitions:"
          find dist -name "*.d.ts" | head -5

      - name: Clean workspace for publishing
        run: |
          # Remove development files and directories not needed for NPM
          rm -rf src/
          rm -rf coverage/
          rm -rf cache/
          rm -rf node_modules/
          rm -rf .git/
          rm -rf .github/
          rm -rf .idea/
          rm -f .env
          rm -f .gitignore
          rm -f eslint.config.mjs
          rm -f tsconfig.json
          rm -f vitest.config.ts
          rm -f yarn.lock
          echo "Cleaned workspace. Remaining files:"
          ls -la

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
